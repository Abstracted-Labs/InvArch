[package]
name = "invarch-node"
version.workspace = true
authors.workspace = true
description = "A Substrate-based InvArch Node."
license.workspace = true
homepage.workspace = true
publish = false
repository.workspace = true
edition.workspace = true
build = "build.rs"

# [package.metadata.docs.rs]
# targets = ["x86_64-unknown-linux-gnu"]

[[bin]]
name = "invarch-collator"
path = "src/main.rs"

[dependencies]
async-trait = { workspace = true }
array-bytes = { workspace = true }
clap = { features = ["derive"], workspace = true }
log = { workspace = true, default-features = true }
codec = { workspace = true, default-features = true }
serde = { features = ["derive"], workspace = true, default-features = true }
jsonrpsee = { features = ["server"], workspace = true }
futures = { workspace = true }

## Local Dependencies
invarch-runtime = { path = "../runtime" }

serde_json = { workspace = true, default-features = true }
docify = { workspace = true }
frame-benchmarking = { workspace = true, default-features = true }
frame-benchmarking-cli = { workspace = true, default-features = true }
pallet-transaction-payment-rpc = { workspace = true, default-features = true }
sc-basic-authorship = { workspace = true, default-features = true }
sc-chain-spec = { workspace = true, default-features = true }
sc-cli = { workspace = true, default-features = true }
sc-client-api = { workspace = true, default-features = true }
sc-consensus-aura = { workspace = true }
sc-offchain = { workspace = true, default-features = true }
sc-consensus = { workspace = true, default-features = true }
sc-executor = { workspace = true, default-features = true }
sc-network = { workspace = true, default-features = true }
sc-network-sync = { workspace = true, default-features = true }
sc-rpc = { workspace = true, default-features = true }
sc-service = { workspace = true, default-features = true }
sc-sysinfo = { workspace = true, default-features = true }
sc-telemetry = { workspace = true, default-features = true }
sc-tracing = { workspace = true, default-features = true }
sc-transaction-pool = { workspace = true, default-features = true }
sc-transaction-pool-api = { workspace = true, default-features = true }
sp-api = { workspace = true, default-features = true }
sp-block-builder = { workspace = true, default-features = true }
sp-blockchain = { workspace = true, default-features = true }
sp-consensus-aura = { workspace = true, default-features = true }
sp-core = { workspace = true, default-features = true }
sp-keystore = { workspace = true, default-features = true }
sp-io = { workspace = true, default-features = true }
sp-runtime = { workspace = true, default-features = true }
sp-timestamp = { workspace = true, default-features = true }
substrate-frame-rpc-system = { workspace = true, default-features = true }
prometheus-endpoint = { workspace = true, default-features = true }
polkadot-cli = { features = [
    "rococo-native",
], workspace = true, default-features = true }
polkadot-primitives = { workspace = true, default-features = true }
xcm = { workspace = true }
cumulus-client-cli = { workspace = true, default-features = true }
cumulus-client-collator = { workspace = true, default-features = true }
cumulus-client-consensus-aura = { workspace = true, default-features = true }
cumulus-client-consensus-common = { workspace = true, default-features = true }
cumulus-client-consensus-proposer = { workspace = true, default-features = true }
cumulus-client-parachain-inherent = { workspace = true }
cumulus-client-service = { workspace = true, default-features = true }
cumulus-primitives-core = { workspace = true, default-features = true }
cumulus-primitives-parachain-inherent = { workspace = true, default-features = true }
cumulus-relay-chain-interface = { workspace = true, default-features = true }
color-print = { workspace = true }
try-runtime-cli = { workspace = true, optional = true }

[build-dependencies]
substrate-build-script-utils = { workspace = true, default-features = true }

[features]
runtime-benchmarks = [
    "invarch-runtime/runtime-benchmarks",
    "polkadot-cli/runtime-benchmarks",
]

try-runtime = ["invarch-runtime/try-runtime", "try-runtime-cli"]
