name: Publish Release

# This script is based on Acala's own release script and is used to build and publish the release WASM build of the runtime:
# - Checkout the selected branch
# - Build WASM using Substrate Runtime Tool
# - Use subwasm to obtain build data
# - Generate release note
# - Create release issue
# - Archive the build artifacts to Github

env:
  SUBWASM_VERSION: 0.17.0

on:
  workflow_dispatch:
    inputs:
      # Get name of the chain
      chain:
        description: Chain Runtime (default = tinkernet)    
        required: true
        default: tinkernet
        type: choice
        options:
          - brainstorm
          - tinkernet
          - invarch
      # Get the scope of release note
      scope:
        description: Release scope (default = full)
        required: true
        default: full
        type: choice
        options:
          - client
          - runtime
          - full
      # Get the SR Tool image used to build
      srtool_image:
        description: Default to use the latest. You can use an alternate image, use with caution!
        required: false

jobs:
  build-release:
    name: Build and publish ${{ github.event.inputs.chain }}
    runs-on: ubuntu-latest
    steps:
      # Checkout the codebase
      - name: Checkout Codebase
        uses: actions/checkout@v3
        with:
          submodules: true

      # Build WASM with Substrate Runtime Tool
      - name: Srtool build
        id: srtool_build
        uses: chevdor/srtool-actions@v0.4.0
        env:
          BUILD_OPTS: ""
        with:
          chain: ${{ github.event.inputs.chain }}
          tag: ${{ github.event.inputs.srtool_image }}

      # Output the build summary
      - name: Build Summary
        run: |
          echo '${{ steps.srtool_build.outputs.json }}' | jq . > ${{ github.event.inputs.chain }}-srtool-digest.json
          cat ${{ github.event.inputs.chain }}-srtool-digest.json
          echo "Runtime location: ${{ steps.srtool_build.outputs.wasm }}"
      # install subwasm
      - name: Install subwasm ${{ env.SUBWASM_VERSION }}
        run: |
          wget https://github.com/chevdor/subwasm/releases/download/v${{ env.SUBWASM_VERSION }}/subwasm_linux_amd64_v${{ env.SUBWASM_VERSION }}.deb
          sudo dpkg -i subwasm_linux_amd64_v${{ env.SUBWASM_VERSION }}.deb
          subwasm --version
      # Display information for wasm
      - name: Extract metadata
        run: |
          subwasm  --json info ${{ steps.srtool_build.outputs.wasm }} > ${{ github.event.inputs.chain }}-info.json
          subwasm info ${{ steps.srtool_build.outputs.wasm }} > ${{ github.event.inputs.chain }}-info.txt
          cat ${{ github.event.inputs.chain }}-info.txt
          subwasm  --json info ${{ steps.srtool_build.outputs.wasm_compressed }} > ${{ github.event.inputs.chain }}-subwam-info.json
          subwasm info ${{ steps.srtool_build.outputs.wasm_compressed }} > ${{ github.event.inputs.chain }}-subwam-info.txt
          cat ${{ github.event.inputs.chain }}-subwam-info.txt
      # Diff new wasm with current
      - name: Check the metadata diff
        run: |
          subwasm diff ${{ steps.srtool_build.outputs.wasm }} --chain-b ${{ github.event.inputs.chain }} | tee ${{ github.event.inputs.chain }}-diff.txt
      # Generate release notes
      - name: Generate note
        id: generate-note
        uses: InvArch/release-note-action@master
        with:
          scope: ${{ github.event.inputs.scope }}
          chain: ${{ github.event.inputs.chain }}
          subwasm_info: ${{ github.event.inputs.chain }}-subwam-info.txt
          srtool_details: ${{ github.event.inputs.chain }}-srtool-digest.json
      
      # Create release checklist issue
      - name: Create Release Checklist issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: ${{ steps.generate-note.outputs.release-note }}
      
      - name: Archive Artifacts for ${{ github.event.inputs.chain }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.inputs.chain }}-runtime
          path: |
            ${{ steps.srtool_build.outputs.wasm }}
            ${{ steps.srtool_build.outputs.wasm_compressed }}
            ${{ github.event.inputs.chain }}-srtool-digest.json
            ${{ github.event.inputs.chain }}-metadata.json
            ${{ github.event.inputs.chain }}-metadata.txt
            ${{ github.event.inputs.chain }}-subwam-info.json
            ${{ github.event.inputs.chain }}-subwam-info.txt
            ${{ github.event.inputs.chain }}-diff.txt
