name: Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  get_changed_files:
    runs-on: ubuntu-latest
    name: Get Changed Files
    outputs:
      all_modified_files: ${{ steps.changed-files.outputs.all_modified_files }}
    steps:
      - uses: actions/checkout@v4

      - name: Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          fetch_depth: 0
          dir_names: true
          dir_names_max_depth: 1

  build_tinkernet:
    runs-on: ubuntu-latest
    name: Build Tinkernet

    needs: get_changed_files
    if:
      contains(needs.get_changed_files.outputs.all_modified_files, 'tinkernet')

    defaults:
      run:
        working-directory: ./tinkernet

    steps:
      - uses: actions/checkout@v4

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h

      - name: Setup for checks
        run: sudo apt install -y git clang curl libssl-dev llvm libudev-dev protobuf-compiler

      - name: Install & display rust toolchain
        run: rustup show

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "tinkernet"

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Run clippy
        run: cargo clippy -- -D warnings

      - name: Run cargofmt
        run: cargo fmt --all -- --check

  build_invarch:
    runs-on: ubuntu-latest
    name: Build InvArch

    needs: get_changed_files
    if:
      contains(needs.get_changed_files.outputs.all_modified_files, 'invarch')

    defaults:
      run:
        working-directory: ./invarch

    steps:
      - uses: actions/checkout@v4

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h

      - name: Setup for checks
        run: sudo apt install -y git clang curl libssl-dev llvm libudev-dev protobuf-compiler

      - name: Install & display rust toolchain
        run: rustup show

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "invarch"

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Run clippy
        run: cargo clippy -- -D warnings

      - name: Run cargofmt
        run: cargo fmt --all -- --check
